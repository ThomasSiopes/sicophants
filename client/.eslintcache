[{"C:\\Users\\thees\\Documents\\Programming_Backups\\react-quote-app\\sicophants\\client\\src\\index.js":"1","C:\\Users\\thees\\Documents\\Programming_Backups\\react-quote-app\\sicophants\\client\\src\\App.js":"2","C:\\Users\\thees\\Documents\\Programming_Backups\\react-quote-app\\sicophants\\client\\src\\reportWebVitals.js":"3","C:\\Users\\thees\\Documents\\Programming_Backups\\react-quote-app\\sicophants\\client\\src\\components\\navBar\\index.js":"4","C:\\Users\\thees\\Documents\\Programming_Backups\\react-quote-app\\sicophants\\client\\src\\components\\footer\\index.js":"5","C:\\Users\\thees\\Documents\\Programming_Backups\\react-quote-app\\sicophants\\client\\src\\pages\\authorNav.js":"6","C:\\Users\\thees\\Documents\\Programming_Backups\\react-quote-app\\sicophants\\client\\src\\pages\\authorPage.js":"7","C:\\Users\\thees\\Documents\\Programming_Backups\\react-quote-app\\sicophants\\client\\src\\utils\\queries.js":"8","C:\\Users\\thees\\Documents\\Programming_Backups\\react-quote-app\\sicophants\\client\\src\\components\\quoteList\\index.js":"9","C:\\Users\\thees\\Documents\\Programming_Backups\\react-quote-app\\sicophants\\client\\src\\pages\\topicPage.js":"10","C:\\Users\\thees\\Documents\\Programming_Backups\\react-quote-app\\sicophants\\client\\src\\pages\\topicNav.js":"11","C:\\Users\\thees\\Documents\\Programming_Backups\\react-quote-app\\sicophants\\client\\src\\pages\\main.js":"12","C:\\Users\\thees\\Documents\\Programming_Backups\\react-quote-app\\sicophants\\client\\src\\components\\quoteRandom\\index.js":"13","C:\\Users\\thees\\Documents\\Programming_Backups\\react-quote-app\\sicophants\\client\\src\\pages\\searchResult.js":"14","C:\\Users\\thees\\Documents\\Programming_Backups\\react-quote-app\\sicophants\\client\\src\\components\\results\\index.js":"15","C:\\Users\\thees\\Documents\\Programming_Backups\\react-quote-app\\sicophants\\client\\src\\components\\resultsQuote\\index.js":"16","C:\\Users\\thees\\Documents\\Programming_Backups\\react-quote-app\\sicophants\\client\\src\\components\\quoteRandomQuote\\index.js":"17","C:\\Users\\thees\\Documents\\Programming_Backups\\react-quote-app\\sicophants\\client\\src\\pages\\quotePage.js":"18","C:\\Users\\thees\\Documents\\Programming_Backups\\react-quote-app\\sicophants\\client\\src\\components\\topicButton\\index.js":"19","C:\\Users\\thees\\Documents\\Programming_Backups\\react-quote-app\\sicophants\\client\\src\\components\\authorButton\\index.js":"20"},{"size":500,"mtime":1626532748920,"results":"21","hashOfConfig":"22"},{"size":2104,"mtime":1630947803438,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":1626532748920,"results":"24","hashOfConfig":"22"},{"size":2043,"mtime":1630695427928,"results":"25","hashOfConfig":"22"},{"size":208,"mtime":1630957961851,"results":"26","hashOfConfig":"22"},{"size":2254,"mtime":1630694493891,"results":"27","hashOfConfig":"22"},{"size":1262,"mtime":1630515132338,"results":"28","hashOfConfig":"22"},{"size":2211,"mtime":1631044755725,"results":"29","hashOfConfig":"22"},{"size":1506,"mtime":1631047293097,"results":"30","hashOfConfig":"22"},{"size":1246,"mtime":1630448819568,"results":"31","hashOfConfig":"22"},{"size":1867,"mtime":1630694553299,"results":"32","hashOfConfig":"22"},{"size":1877,"mtime":1630946430608,"results":"33","hashOfConfig":"22"},{"size":2020,"mtime":1631044805237,"results":"34","hashOfConfig":"22"},{"size":868,"mtime":1630861420503,"results":"35","hashOfConfig":"22"},{"size":2196,"mtime":1630861551296,"results":"36","hashOfConfig":"22"},{"size":2379,"mtime":1631047197089,"results":"37","hashOfConfig":"22"},{"size":1607,"mtime":1630946874438,"results":"38","hashOfConfig":"22"},{"size":4069,"mtime":1631047415546,"results":"39","hashOfConfig":"22"},{"size":579,"mtime":1631044295805,"results":"40","hashOfConfig":"22"},{"size":588,"mtime":1631047133190,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1f4sszg",{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\thees\\Documents\\Programming_Backups\\react-quote-app\\sicophants\\client\\src\\index.js",[],["92","93"],"C:\\Users\\thees\\Documents\\Programming_Backups\\react-quote-app\\sicophants\\client\\src\\App.js",["94","95"],"import React from \"react\";\nimport { ApolloClient, InMemoryCache, ApolloProvider, createHttpLink } from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport bootstrap from \"bootstrap\";\nimport reactBootstrap from \"react-bootstrap\";\n\nimport NavBar from \"./components/navBar\";\nimport Footer from \"./components/footer\";\nimport Home from \"./pages/main\";\nimport AuthorNav from \"./pages/authorNav\";\nimport AuthorPage from \"./pages/authorPage\";\nimport TopicNav from \"./pages/topicNav\";\nimport TopicPage from \"./pages/topicPage\";\nimport QuotePage from \"./pages/quotePage\";\nimport SearchResult from \"./pages/searchResult\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst httpLink = createHttpLink({\n  uri: \"/graphql\",\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <NavBar></NavBar>\n        <div className=\"container\">\n          <div className=\"mainBody\">\n            <Route exact path=\"/\">\n              <Home/>\n            </Route>\n            <Route exact path=\"/authorNavigation\">\n              <AuthorNav/>\n            </Route>\n            <Route exact path=\"/topicNavigation\">\n              <TopicNav/>\n            </Route>\n            <Route exact path=\"/author/:authorId\">\n              <AuthorPage/>\n            </Route>\n            <Route exact path=\"/topic/:topicId\">\n              <TopicPage/>\n            </Route>\n            <Route exact path=\"/quote/:quoteId\">\n              <QuotePage/>\n            </Route>\n            <Route exact path=\"/search/:query\">\n              <SearchResult/>\n            </Route>\n          </div>\n        </div>\n        <Footer></Footer>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","C:\\Users\\thees\\Documents\\Programming_Backups\\react-quote-app\\sicophants\\client\\src\\reportWebVitals.js",[],"C:\\Users\\thees\\Documents\\Programming_Backups\\react-quote-app\\sicophants\\client\\src\\components\\navBar\\index.js",["96","97","98"],"import React from \"react\";\r\nimport { Link, Redirect, useHistory } from \"react-router-dom\";\r\nimport { Navbar, Nav, NavDropdown, Button, Container, Form } from \"react-bootstrap\"\r\n\r\n class NavBar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { value: '', go: false };\r\n        \r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(event) { \r\n        this.setState({value: event.target.value}); \r\n    }\r\n    \r\n    handleSubmit(event) {\r\n      event.preventDefault();\r\n      this.setState({go: true});\r\n    }\r\n\r\n    render() {\r\n        if(this.state.go) {\r\n            this.setState({go: false});\r\n            return <Redirect to={`/search/${this.state.value}`}/>\r\n        }\r\n        else {\r\n            return (\r\n                <Navbar bg=\"red\" variant=\"dark\" expand=\"sm\" className=\"font-Lato\">\r\n                    <Container>\r\n                        <Link className=\"navbar-brand\" to={`/`}><strong>PROVERBIAL WISDOM</strong></Link>\r\n                        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"me-auto\">\r\n                            <Link className=\"nav-link\" to={`/`}>Home</Link>\r\n                            <Link className=\"nav-link\" to={`/authorNavigation`}>Authors</Link>\r\n                            <Link className=\"nav-link\" to={`/topicNavigation`}>Topics</Link>\r\n                        </Nav>\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <input type=\"text\" id=\"searchTerm\" placeholder=\"Search...\" className=\"mx-2\" onChange={this.handleChange}></input>\r\n                            <input type=\"submit\" value=\"Submit\"></input>\r\n                        </Form>\r\n                        </Navbar.Collapse>\r\n                    </Container>\r\n                </Navbar>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default NavBar;","C:\\Users\\thees\\Documents\\Programming_Backups\\react-quote-app\\sicophants\\client\\src\\components\\footer\\index.js",["99"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst FooterPage = () => {\r\n    return (\r\n        <div>\r\n            Footer test\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FooterPage;","C:\\Users\\thees\\Documents\\Programming_Backups\\react-quote-app\\sicophants\\client\\src\\pages\\authorNav.js",[],"C:\\Users\\thees\\Documents\\Programming_Backups\\react-quote-app\\sicophants\\client\\src\\pages\\authorPage.js",["100"],"import React from \"react\";\r\nimport { Link, Redirect, useParams } from 'react-router-dom';\r\nimport { useQuery } from '@apollo/client';\r\nimport { Container } from \"react-bootstrap\"\r\nimport \"../assets/css/index.css\"\r\n\r\nimport { QUERY_AUTHOR_ID } from '../utils/queries';\r\n\r\nimport QuoteList from \"../components/quoteList\";\r\n\r\nfunction AuthorPage() {\r\n    const { authorId } = useParams();\r\n\r\n    const { loading, data } = useQuery(QUERY_AUTHOR_ID, {\r\n        variables: { authorId: authorId },\r\n    })\r\n\r\n    if(loading) {\r\n        return <div className=\"loadingPage\">Loading...</div>;\r\n    }\r\n\r\n    console.log(data);\r\n\r\n    const author = data.authorID;\r\n    \r\n    return (\r\n        <div>\r\n            <Container className=\"auttopBody\">\r\n                <p>\r\n                    <Link className=\"breadCrumb redText\" to={`/`}>Home</Link>{` > `}\r\n                    <Link className=\"breadCrumb redText\" to={`/authorNavigation`}>Authors</Link>{` > `}\r\n                    <Link className=\"breadCrumb redText\" to={`/author/${author._id}`}>{author.name}</Link>\r\n                </p>\r\n                <p>Quotes from {author.name}</p>\r\n                <QuoteList quotes={author.quotes}/>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AuthorPage;","C:\\Users\\thees\\Documents\\Programming_Backups\\react-quote-app\\sicophants\\client\\src\\utils\\queries.js",[],"C:\\Users\\thees\\Documents\\Programming_Backups\\react-quote-app\\sicophants\\client\\src\\components\\quoteList\\index.js",[],"C:\\Users\\thees\\Documents\\Programming_Backups\\react-quote-app\\sicophants\\client\\src\\pages\\topicPage.js",["101"],"import React from \"react\";\r\nimport { Link, Redirect, useParams } from 'react-router-dom';\r\nimport { useQuery } from '@apollo/client';\r\nimport { Container } from \"react-bootstrap\"\r\nimport \"../assets/css/index.css\"\r\n\r\nimport { QUERY_TOPIC_ID } from '../utils/queries';\r\n\r\nimport QuoteList from \"../components/quoteList\";\r\n\r\nfunction TopicPage() {\r\n    const { topicId } = useParams();\r\n\r\n    const { loading, data } = useQuery(QUERY_TOPIC_ID, {\r\n        variables: { topicId: topicId },\r\n    })\r\n\r\n    if(loading) {\r\n        return <div className=\"loadingPage\">Loading...</div>;\r\n    }\r\n\r\n    console.log(data);\r\n\r\n    const topic = data.topicID;\r\n    \r\n    return (\r\n        <div>\r\n            <Container className=\"auttopBody\">\r\n                <p>\r\n                    <Link className=\"breadCrumb redText\" to={`/`}>Home</Link>{` > `}\r\n                    <Link className=\"breadCrumb redText\" to={`/topicNavigation`}>Topics</Link>{` > `}\r\n                    <Link className=\"breadCrumb redText\" to={`/topic/${topic._id}`}>{topic.name}</Link>\r\n                </p>\r\n                <p>Quotes from {topic.name}</p>\r\n                <QuoteList quotes={topic.quotes}/>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TopicPage;","C:\\Users\\thees\\Documents\\Programming_Backups\\react-quote-app\\sicophants\\client\\src\\pages\\topicNav.js",[],"C:\\Users\\thees\\Documents\\Programming_Backups\\react-quote-app\\sicophants\\client\\src\\pages\\main.js",["102","103","104"],"import React from \"react\";\r\nimport { Link, Redirect, useParams } from 'react-router-dom';\r\nimport { Container, Row, Col, Card } from \"react-bootstrap\";\r\nimport \"../assets/css/index.css\";\r\n\r\nimport QuoteRandom from \"../components/quoteRandom\";\r\nimport QuoteRandomQuote from \"../components/quoteRandomQuote\";\r\n\r\nfunction Main() {\r\n    return (\r\n        <Container>\r\n            <Row className=\"mt-3 auttopBody\">\r\n                <Col xs={2}>\r\n                    <Link className=\"breadCrumb redText\" to={`/`}>Home</Link>\r\n                </Col>\r\n                <Col xs={8} className=\"text-center\">\r\n                    <h3>Proverbial Wisdom Homepage</h3>\r\n                </Col>\r\n                <Col xs={2}></Col>\r\n            </Row>\r\n            <Row className=\"mt-3 text-center\">\r\n                <Col xs={12} md={8} className=\"auttopBody mb-2 me-3\">\r\n                    <Row>\r\n                        <Col xs={6}>\r\n                            <p>Popular Authors</p>\r\n                            <hr></hr>\r\n                            <QuoteRandom classif=\"author\" amount=\"10\"/>\r\n                            <Link className=\"btn btn-red\" to={`/authorNavigation`}>All Authors</Link>\r\n                        </Col>\r\n                        <Col xs={6}>\r\n                            <p>Popular Topics</p>\r\n                            <hr></hr>\r\n                            <QuoteRandom classif=\"topic\" amount=\"10\"/>\r\n                            <Link className=\"btn btn-red\" to={`/topicNavigation`}>All Topics</Link>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col className=\"auttopBody mb-2\">\r\n                    <p>Random Quotes</p>\r\n                    <hr></hr>\r\n                    <QuoteRandomQuote amount=\"3\"/>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Main;","C:\\Users\\thees\\Documents\\Programming_Backups\\react-quote-app\\sicophants\\client\\src\\components\\quoteRandom\\index.js",["105","106"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useQuery } from '@apollo/client';\r\n\r\nimport { QUERY_AUTHOR_ALL, QUERY_TOPIC_ALL } from '../../utils/queries';\r\n\r\nconst QuoteRandom = ({classif, amount}) => {\r\n    let authList, topList, scatterList = [], randArr = [], randomNum, pass = 0;\r\n    amount = parseInt(amount);\r\n\r\n    let {loading, data} = useQuery(QUERY_AUTHOR_ALL);\r\n    authList = data;\r\n\r\n    ({loading, data} = useQuery(QUERY_TOPIC_ALL));\r\n    topList = data;\r\n    \r\n    if(!loading && authList && topList) {\r\n        if(classif === \"author\") {\r\n            for(let i = 0; i < amount; ++i) {\r\n                do {\r\n                    randomNum = Math.floor(Math.random() * authList.authors.length);\r\n                    pass = 0\r\n                    for(let n of randArr) {\r\n                        if(n == randomNum) {\r\n                            pass = 1;\r\n                        }\r\n                    }\r\n                } while (pass);\r\n                scatterList.push(authList.authors[randomNum]);\r\n                randArr.push(randomNum);\r\n            }\r\n        } else if (classif === \"topic\") {\r\n            for(let i = 0; i < amount; ++i) {\r\n                do {\r\n                    randomNum = Math.floor(Math.random() * topList.topics.length);\r\n                    pass = 0\r\n                    for(let n of randArr) {\r\n                        if(n == randomNum) {\r\n                            pass = 1;\r\n                        }\r\n                    }\r\n                } while (pass);\r\n                scatterList.push(topList.topics[randomNum]);\r\n                randArr.push(randomNum);\r\n            }\r\n        } \r\n    }\r\n    else {\r\n        return <div>Loading...</div>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {scatterList.map((index) => ( \r\n                <p key={index.name}><Link className=\"redText breadCrumb\" to={`/${classif}/${index._id}`}>{index.name}</Link></p>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default QuoteRandom;","C:\\Users\\thees\\Documents\\Programming_Backups\\react-quote-app\\sicophants\\client\\src\\pages\\searchResult.js",["107"],"import React from \"react\";\r\nimport { Link, Redirect, useParams } from 'react-router-dom';\r\nimport { Container } from \"react-bootstrap\";\r\nimport \"../assets/css/index.css\";\r\n\r\nimport Results from \"../components/results\";\r\nimport ResultsQuote from \"../components/resultsQuote\";\r\n\r\nfunction SearchResults() {    \r\n    const { query } = useParams();\r\n    \r\n    return (\r\n        <Container className=\"auttopBody\">\r\n            <div className=\"mb-3\"><Link className=\"breadCrumb redText\" to={`/`}>Home</Link> {`>`} Search {`>`} Showing results for \"{query}\"</div>\r\n            <Container>\r\n                <Results classif=\"author\" input={query}></Results>\r\n                <Results classif=\"topic\" input={query}></Results>\r\n                <ResultsQuote input={query}></ResultsQuote>\r\n            </Container>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default SearchResults;","C:\\Users\\thees\\Documents\\Programming_Backups\\react-quote-app\\sicophants\\client\\src\\components\\results\\index.js",[],"C:\\Users\\thees\\Documents\\Programming_Backups\\react-quote-app\\sicophants\\client\\src\\components\\resultsQuote\\index.js",[],"C:\\Users\\thees\\Documents\\Programming_Backups\\react-quote-app\\sicophants\\client\\src\\components\\quoteRandomQuote\\index.js",["108"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useQuery } from '@apollo/client';\r\nimport { Card } from \"react-bootstrap\";\r\n\r\nimport { QUERY_QUOTES_ALL } from '../../utils/queries';\r\n\r\nconst QuoteRandomQuote = ({amount}) => {\r\n    let quoteList, scatterList = [], randArr = [], randomNum, pass = 0;\r\n    amount = parseInt(amount);\r\n\r\n    let {loading, data} = useQuery(QUERY_QUOTES_ALL);\r\n    quoteList = data;\r\n    \r\n    if(!loading) {\r\n        for(let i = 0; i < amount; ++i) {\r\n            do {\r\n                randomNum = Math.floor(Math.random() * quoteList.quotes.length);\r\n                pass = 0\r\n                for(let n of randArr) {\r\n                    if(n == randomNum) {\r\n                        pass = 1;\r\n                    }\r\n                }\r\n            } while (pass);\r\n            scatterList.push(quoteList.quotes[randomNum]);\r\n            randArr.push(randomNum);\r\n        }\r\n    }\r\n    else {\r\n        return <div>Loading...</div>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {scatterList.map((index) => (                 \r\n                <Card key={index.quoteText} className=\"mb-2\">\r\n                    <Link className=\"redText breadCrumb\" to={`/quote/${index._id}`}>\r\n                        <Card.Body>\"{index.quoteText}\"</Card.Body>\r\n                    </Link>\r\n                    <Card.Footer>\r\n                        <Link className=\"redText breadCrumb\" to={`/`}>{index.authorName}</Link>\r\n                    </Card.Footer>\r\n                </Card>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default QuoteRandomQuote;","C:\\Users\\thees\\Documents\\Programming_Backups\\react-quote-app\\sicophants\\client\\src\\pages\\quotePage.js",["109","110"],"C:\\Users\\thees\\Documents\\Programming_Backups\\react-quote-app\\sicophants\\client\\src\\components\\topicButton\\index.js",[],"C:\\Users\\thees\\Documents\\Programming_Backups\\react-quote-app\\sicophants\\client\\src\\components\\authorButton\\index.js",[],{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":5,"column":8,"nodeType":"117","messageId":"118","endLine":5,"endColumn":17},{"ruleId":"115","severity":1,"message":"119","line":6,"column":8,"nodeType":"117","messageId":"118","endLine":6,"endColumn":22},{"ruleId":"115","severity":1,"message":"120","line":2,"column":26,"nodeType":"117","messageId":"118","endLine":2,"endColumn":36},{"ruleId":"115","severity":1,"message":"121","line":3,"column":23,"nodeType":"117","messageId":"118","endLine":3,"endColumn":34},{"ruleId":"115","severity":1,"message":"122","line":3,"column":36,"nodeType":"117","messageId":"118","endLine":3,"endColumn":42},{"ruleId":"115","severity":1,"message":"123","line":2,"column":10,"nodeType":"117","messageId":"118","endLine":2,"endColumn":14},{"ruleId":"115","severity":1,"message":"124","line":2,"column":16,"nodeType":"117","messageId":"118","endLine":2,"endColumn":24},{"ruleId":"115","severity":1,"message":"124","line":2,"column":16,"nodeType":"117","messageId":"118","endLine":2,"endColumn":24},{"ruleId":"115","severity":1,"message":"124","line":2,"column":16,"nodeType":"117","messageId":"118","endLine":2,"endColumn":24},{"ruleId":"115","severity":1,"message":"125","line":2,"column":26,"nodeType":"117","messageId":"118","endLine":2,"endColumn":35},{"ruleId":"115","severity":1,"message":"126","line":3,"column":31,"nodeType":"117","messageId":"118","endLine":3,"endColumn":35},{"ruleId":"127","severity":1,"message":"128","line":24,"column":30,"nodeType":"129","messageId":"130","endLine":24,"endColumn":32},{"ruleId":"127","severity":1,"message":"128","line":38,"column":30,"nodeType":"129","messageId":"130","endLine":38,"endColumn":32},{"ruleId":"115","severity":1,"message":"124","line":2,"column":16,"nodeType":"117","messageId":"118","endLine":2,"endColumn":24},{"ruleId":"127","severity":1,"message":"128","line":21,"column":26,"nodeType":"129","messageId":"130","endLine":21,"endColumn":28},{"ruleId":"115","severity":1,"message":"124","line":2,"column":16,"nodeType":"117","messageId":"118","endLine":2,"endColumn":24},{"ruleId":"127","severity":1,"message":"128","line":38,"column":26,"nodeType":"129","messageId":"130","endLine":38,"endColumn":28},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],"no-unused-vars","'bootstrap' is defined but never used.","Identifier","unusedVar","'reactBootstrap' is defined but never used.","'useHistory' is defined but never used.","'NavDropdown' is defined but never used.","'Button' is defined but never used.","'Link' is defined but never used.","'Redirect' is defined but never used.","'useParams' is defined but never used.","'Card' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]